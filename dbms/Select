#!/bin/bash

function checkRET()
{
	if [ "$1" == "$cancelVal" ]
		then echo "Process cancelled.."
		exit 0
	fi
}


read -p "Enter table to select from (type 'ret' to cancel): " tname

checkRET $tname

if test -f $current_db/$tname
then
	cols=$( sed -n '1p' $current_db/$tname )
	col_names=(${cols//';'/' '})	
	read -p "Enter column to select from on: " col
	checkRET $col
	if [[ "${col_names[*]}" =~ "$col" ]]
	then
		read -p "select from $tname where $col = " val
		indOfCol=$(head -n 1 $current_db/$tname | awk 'BEGIN{FS=";"} {for(i=1;i<=NF;i++){print $i, i}}' | awk '{if (match($1, targetCol))print $2}' targetCol="$col")
		rec=$(awk 'BEGIN{FS=";"} {for(i=1;i<=NF;i++){if (i == targetColInd && $i == targetVal) print $0}}' targetColInd="$indOfCol" targetVal="$val" $current_db/$tname)
		cols=$(head -n 1 $current_db/$tname | awk 'BEGIN{FS=";"} {for(i=1;i<=NF;i++)print $i}' | awk '{if (match($1, pk)) {sub(pk, "", $1); print $1} else print $1}' pk="pk-")
		colNames=(${cols//" "/""})
		records=(${rec//" "/""})
		echo "_________________________________________________________________________________________________________________________________________________"
		for att in "${colNames[@]}"
		do
			echo -n "|$att				"
		done
		echo " "
		echo "_________________________________________________________________________________________________________________________________________________"
		
		for record in "${records[@]}"
		do
			current=$record 
			field=(${current//";"/" "})
			#echo "${field[@]}" | awk 'BEGIN{FS=" "} {for(i=1;i<=NF;i++){printf $i, "	"}} END{print ""}' 
			#echo "${field[@]}" | awk '{for(i=1;i<=NF;i++){printf "|", $i, "		"}}' 
			for f in "${field[@]}"
			do 
				echo -n "|$f				"
			done
			echo ""
		done
		echo ""
		echo ""
	else
		echo "column not found!"
	fi
else
	echo "Table not found."
fi
